version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: gate-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-gate}
      MYSQL_USER: ${DB_USER:-gate_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-gate_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - gate-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpassword}"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gate-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - gate-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 10s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: gate-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-gate}
      DB_USER: ${DB_USER:-gate_user}
      DB_PASSWORD: ${DB_PASSWORD:-gate_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-this-in-production}
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secret-session-key-change-this-in-production}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@motifgames.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      ADMIN_NAME: ${ADMIN_NAME:-Administrator}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      DISABLE_X_POWERED_BY: true
      DEFAULT_LANGUAGE: ${DEFAULT_LANGUAGE:-ko}
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - gate-network
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 30s

  # Frontend (Nginx)
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    container_name: gate-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api/v1}
      VITE_APP_NAME: ${VITE_APP_NAME:-Gate}
      VITE_DEFAULT_LANGUAGE: ${VITE_DEFAULT_LANGUAGE:-ko}
    ports:
      - "${FRONTEND_PORT:-80}:80"
      - "${FRONTEND_HTTPS_PORT:-443}:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - gate-network
    volumes:
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 30s

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  gate-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
